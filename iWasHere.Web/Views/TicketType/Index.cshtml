
@{
    ViewData["Title"] = "Index";
}

<style>

    .btn {
        background-color: #ff9999;
        border: none;
        color: white;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
    }

    .myHeader {
        color: black;
        padding: 38px;
        text-align: center;
        font-family: Georgia;
        font-size: 320%;
       
    }
    
    input {
    width: 60%;
}
    .btn2 {
        background-color: #ff9999;
        border: none;
        color: white;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 20px;
    }
    .filter {
       
        border-style: double;
         border: 2px light blue;
         border-radius: 3px;
       
    }
</style>


<h1 class="myHeader">Dictionar Bilete</h1>


<br/>
@using (Html.BeginForm("Filter", "Ticket", FormMethod.Post))
{
    <div style="text-align:center" class="filter">
        
       
        <br /><input type="text" id="txtSearchedValue" placeholder="Introdu denumire tichet...."; style="font-style: italic" max="100"/><br/> <br/>
        <!-- <input type="submit" value="Filtreaza" /> -->
        <button class="btn2" type="button" onclick="refresh()" asp-controller="TicketType" asp-action="TicketsRead">Filtreaza</button>
        <!-- <button onclick="tickets.getFilter()">Filtreaza</button> -->
        <button class="btn2" type="button" onclick="stergeFiltru()" asp-controller="TicketType" asp-action="TicketsRead"> Sterge filtre </button>

        <br />
        <br />
    </div>
}
@(Html.Kendo().Grid<iWasHere.Domain.Model.DictionaryTicket>()
       .Name("grid")
       .Columns(columns =>
       {
           columns.Bound(c => c.DictionaryTicketId).Title("Id").Visible(false);


           columns.Bound(c => c.TicketCategory).Title("Type");
             columns.Template("<a href='" + @Url.Action("CreateTicketType", "TicketType") + "?id=#=DictionaryTicketId#' onclick='setEdit()' class='btn btn-info'> Modifica</a> ").Width(200);
           columns.Command(command => { command.Destroy(); }).Width(200);
          // columns.Template(" <input type='button' class='k-button info' name='info' value='Modifica' /> ");
          //    columns.Template(" <input type='button' class='k-button info' name='info' value='Sterge' /> ");


       })

       .HtmlAttributes(new { style = "height: 550px;" })
       .Scrollable()
       .Sortable()
       .Filterable()

       .Pageable(pageable => pageable
           .Refresh(true)
           .PageSizes(true)
           .ButtonCount(5))
       .DataSource(dataSource => dataSource
           .Ajax()
           .Read(read => read.Action("TicketsRead", "TicketType").Data("getFilter"))
           .PageSize(10)
            .Model(model => model.Id(t => t.DictionaryTicketId))
                .Destroy(update => update.Action("Delete", "TicketType"))
       )
)
<br />
<div align="center">
    <a href="@Url.Action("CreateTicketType", "TicketType", 0)" id="addTicket " onclick="setCreate()" class="btn btn-info">&nbsp;  Adauga tip bilet</a>
</div>
<script type="text/javascript">

    function getFilter() {
        var tickets = {};
        tickets["ticketType"] = $("#txtSearchedValue").val();
        console.log(tickets.ticketType);

        return tickets;
    }



    function refresh() {
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);

    }

    function stergeFiltru() {
        // $("#txtSearchedValue").Clear();
        //   refresh();
        $("#txtSearchedValue").val("");
        refresh();
    }

    var getInput;
    function setCreate() {
        getInput = "create"
        localStorage.setItem("storageName", getInput);
    }

    function setEdit() {
        getInput = "edit"
        localStorage.setItem("storageName", getInput);
    }



</script>
