@model iWasHere.Domain.DTOs.CityDTO

@{
    ViewData["Title"] = "CreateOrEdit";
}

<style>
    .help-block ul {
    list-style-type: none;
    }
    .validation-summary-errors ul { 
    list-style: none;
    padding-left: 0;
    }
    .myvalidation{
        color:red;
    }
</style>

<span class="help-block">
    @Html.ValidationSummary(true, "", new { @class = "alert alert-danger myvalidation" })
</span>

@using (Html.BeginForm("Create", "City", FormMethod.Post, new { id = "form" }))
{
    <label>Adauga un Oras:</label>
    <input type="text" asp-for="cityName" id="textBox" />

    <br />
    <label>Selecteaza un Judet:</label>
    @(Html.Kendo().ComboBoxFor(model => model.countyId)
               .DataValueField("countyId")
               .DataTextField("county")
               .HtmlAttributes(new { style = "width:60%", id = "county" })
           .Filter("StartsWith")
           .DataSource(source =>
           {
               source.Read(read =>
               {
                   read.Action("Read_County", "City");
               })
               .ServerFiltering(true);
           })
    )
    <br />
    <button type="submit" id="save" class="btn btn-primary" name="submitButton" value="Save">Salveaza</button>
    <br />

    <button type="submit" id="new" class="btn btn-dark" name="submitButton" value="SaveAndNew">Salveaza si Nou</button>
    <br />

    <a asp-action="Index" class="btn btn-success">Anuleaza</a>
}
<script type="text/javascript">

    window.onload = set();
    function set() {
        var verify = localStorage.getItem("storageName");
        if (verify == "edit") {
            document.getElementById("new").style.visibility = "hidden";
        }
    }

    function isEmptyOrSpaces(str) {
        return str === null || str.match(/^ *$/) !== null;
    }

</script>




