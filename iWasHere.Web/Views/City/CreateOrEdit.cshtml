@model iWasHere.Domain.DTOs.CityDTO

@{
    ViewData["Title"] = "CreateOrEdit";
}
<style>
    input {
        width: 60%;
    }
    </style>

@using (Html.BeginForm("Create", "City", FormMethod.Post, new { id = "form" }))
{ <div align="center">
    <label>Adauga un Oras:</label>
    <input type="text" asp-for="cityName" id="textBox" />

    <br />
    <br/>
    <label>Selecteaza un Judet:</label>
    @(Html.Kendo().ComboBoxFor(model=> model.countyId)                
               .DataValueField("countyId")
               .DataTextField("county")
               .HtmlAttributes(new { style = "width:60%", id="county" })
           .Filter("StartsWith")
           .DataSource(source =>
           {
               source.Read(read =>
               {
                   read.Action("Read_County", "City");
               })
               .ServerFiltering(true);
           })
    )
    </div>
    <br/>
    <br/>
    <div align="center">
    
    <button type="submit" onclick="validateData()"  id="save" class="btn btn-primary" name="submitButton" value="Save">Salveaza</button>
    
    <button type="submit" onclick="validateData()"  id="new" class="btn btn-dark" name="submitButton" value="SaveAndNew">Salveaza si Nou</button>
  
    <a asp-action="Index" class="btn btn-success">Anuleaza</a>
        </div>
}
<script type="text/javascript"> 
            
    window.onload = set();
    function set() {
        var verify = localStorage.getItem("storageName");
        if (verify == "edit") {
            document.getElementById("new").style.visibility = "hidden";
        }
    }

    function isEmptyOrSpaces(str){
    return str === null || str.match(/^ *$/) !== null;
    }  
    
    function validateData() {        
        
        if ( isEmptyOrSpaces($('#textBox').val()) ) {
            alert("Numele orasului este obligatoriu");            
        }
        else if (isEmptyOrSpaces($('#countries').val())) {
            alert("Numele judetului este obligatoriu");            
        }        
    }   

</script>




