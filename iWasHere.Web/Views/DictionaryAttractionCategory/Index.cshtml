
@{
    ViewData["Title"] = "Index";
}
<style>

    .myHeader {
        background-color: lightblue;
        color: white;
        padding: 40px;
        text-align: center;
        font-family: Georgia;
        text-shadow: 2px 2px 4px #000000;
        font-size: 320%;
    }

    .filter {
        border: 2px light blue;
        border-radius: 3px;
        background-color: hsla(120, 100%, 25%, 0.3);
    }
</style>

<h1 class="myHeader"> Dictionar categorii de actractii</h1>

<div class="filter">



    <form>
        <br />
        <h3 style="font-family:courier;">Filtreaza dupa:</h3>
        <div class="div2" align="center">
            <label>Tip atractie: </label>
            <input id="attractionCategory" type="text" name="attractionCategory" value="" />
            <button onclick="refresh()" type="button" class="btn btn-primary" asp-area="" asp-controller="DictionaryAttractionCategory" asp-action="GetFilteredAttraction">Filtreaza</button>



        </div>
    </form>
    </br>
    <br />

    <script type="text/javascript">
        getRequestedAttractionCategory = function (e) {
            var input = {};
            input["attractionCategory"] = $("#attractionCategory").val();



            return input;
        }



        function refresh() {
            $("#grid").data("kendoGrid").dataSource.read();
            $("#grid").data("kendoGrid").dataSource.page(1);
        }



        function setEdit() {
            localStorage.setItem("storageName", "edit");
        }



        function setAdd() {
            localStorage.setItem("storageName", "add");
        }



    </script>


    @(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryAttractionCategoryModel>()
            .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.AttractionCategoryId).Visible(false);
                columns.Bound(c => c.AttractionCategoryName);
                columns.Template("<a onclick='setEdit()' class = 'btn btn-success' href='" + @Url.Action("AddAttractionCategory", "DictionaryAttractionCategory") + "?id=#=AttractionCategoryId#'>Modifica</a>");
                columns.Command(command => { command.Destroy(); }).Width(200);
            })
            .HtmlAttributes(new { style = "height: 550px;" })
            .Scrollable()
            .Sortable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
            .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(2)
                .Read(read => read.Action("GetAttractionCategory", "DictionaryAttractionCategory").Data("getRequestedAttractionCategory"))
                .Model(model => model.Id(t => t.AttractionCategoryId))
                .Destroy(delete => delete.Action("DeleteAttractionCategory", "DictionaryAttractionCategory"))
         )
    )

    <a onclick="setAdd()" href=@Url.Action("AddAttractionCategory", "DictionaryAttractionCategory", 0) type="button" class="btn btn-primary">Adauga</a>
