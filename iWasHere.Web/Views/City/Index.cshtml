@model iWasHere.Domain.DTOs.CityDTO
@{
    ViewData["Title"] = "Orase";
}
<style>
    .myHeader {
         
        color: black;
        padding: 45px;
        text-align: center;
        font-family: Georgia;
        font-size: 300%;
      
    }
    .filter {

        border-style: double;
         border-radius: 3px;
        
}
    input {
    width: 60%;
}
</style>
<h1 class="myHeader"> Dictionar Orase</h1>

<div class="filter">
    <br />
    @using (Html.BeginForm())
    { <div style="text-align:center">
        <h3 style="font-family:Georgia;">Filtre Oras: &nbsp;</h3><br />
        <input type="text" id="textBox" placeholder="Intodu numele orasului...." style="font-style:italic"/><br />
        <label style="font-family:courier;"> Judet: </label><br />


        @(Html.Kendo().ComboBoxFor(model => model.county)
                  .DataValueField("county")
                  .DataTextField("county")
                  .HtmlAttributes(new { style = "width:60%", id = "county" })
              .Filter("StartsWith")
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("Read_County", "City");
                  })
                  .ServerFiltering(true);
              })
        )
    </div>
    }
    <br/>
    <div align="center">
        <button onclick="refresh()" id="btn_filter" type="submit" class="btn btn-primary">Filtreaza &nbsp;</button>
        <button type="button" id="btnDelete" class="btn btn-dark" onclick="deleteFilters()" asp-controller="City" asp-action="Index">Sterge Filtre</button>
    </div><br/>

</div>


<br />

<div class="row" col-6>

    @(Html.Kendo().Grid<iWasHere.Domain.DTOs.CityDTO>()
        .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.cityId).Title("CityId").Visible(false);
                columns.Bound(c => c.countyId).Title("CountyId").Visible(false);
                columns.Bound(c => c.cityName).Title("Nume Oras");
                columns.Bound(c => c.county).Title("Nume Judet");
                columns.Template("<a href='" + @Url.Action("CreateOrEdit", "City") + "?id=#=cityId#' onclick='setEdit()' class='btn btn-success'> <i class='fas fa-edit'></i>&nbsp; Modifica</a> ").Width(180);
                columns.Command(command =>
           {
                  command.Destroy().Text("<i class='fas fa-trash-alt'></i> &nbsp; Delete");
           }).Width(180);
            })
            .HtmlAttributes(new { style = "height: 550px;" })
            .Scrollable()            
            .Sortable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .Filterable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("Read", "City").Data("myFilter"))                
                .Model(model => model.Id(p => p.cityId))
                .Destroy(d => d.Action("Delete", "City"))
                .Events(e => e.Error("handleError"))
                .PageSize(10)
                )
    )
    <br/>
    <br/>
    
</div> <br/>
<div align="center">
    <a href="@Url.Action("CreateOrEdit", "City", 0)" id="btn_add " onclick="setCreate()" class="btn btn-info"><i class="fas fa-plus"></i>&nbsp; Adauga oras nou</a>
</div>
<script type="text/javascript">
    var getInput;
    function setCreate() {
        getInput = "create"
        localStorage.setItem("storageName", getInput);
    }

    function setEdit() {
        getInput = "edit"
        localStorage.setItem("storageName", getInput);
    }

    function deleteFilters() {
        $('#textBox').val("");
        $('#Orase').val("");
        refresh();

    }   

    function myFilter() {
        var cityName = $("#textBox").val()
        var countyName = $("#county").val()

        var filter = {}
        filter["cityName"] = cityName
        filter["countyName"] = countyName
        console.log(filter.cityName, filter.countyName)

        return filter
    }

    function refresh() {
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);

    }
    function handleError(e) {
        alert("Eroare de stergere! Acest oras reprezinta referinta catre alte obiective turistice!")
        refresh();
    }
    $(document).ready(function () {
        $("#btn_add").kendoButton();

        $("#btn_filter").kendoButton({
            icon: "filter"
        });

        $("#btn_r_filter").kendoButton({
            icon: "filter-clear"

        });

    });

</script>


