@model iWasHere.Domain.DTOs.CityDTO
@{
    ViewData["Title"] = "Index";
}

<br />

@using (Html.BeginForm())
{
    <input type="text" id="textBox" />
    <br />
    @(Html.Kendo().AutoComplete()
           .Name("Orase")
           .DataTextField("Name")
           .HtmlAttributes(new { style = "width:40%" })
           .Filter("StartsWith")
           .DataSource(source =>
                   {
               source.Read(read =>
               {
                   read.Action("Read_County", "City").Data("onAdditionalData");
               })
               .ServerFiltering(true);
           })
    )

}

<button onclick="refresh()" type="submit"  class="btn btn-primary">Filtreaza</button><br/><br/>
<button type="button" id="btnDelete" class="btn btn-dark" onclick="deleteFilters()" asp-controller="City" asp-action="Index">Sterge Filtre</button>

<script type="text/javascript">
    var getInput;
    function setCreate() {        
        getInput = "create"
        localStorage.setItem("storageName",getInput);
    }

    function setEdit() {        
        getInput = "edit"
        localStorage.setItem("storageName",getInput);
    }

    function deleteFilters() {
        $('#textBox').val(""); 
        $('#Orase').val(""); 

    }
    function onAdditionalData() {
            return {
                text: $("#Orase").val()
            };
    }

    function myFilter() {        
        var cityName = $("#textBox").val()
        var countyName = $("#Orase").val()

        var filter = {}
        filter["cityName"] = cityName
        filter["countyName"] = countyName
        console.log(filter.cityName, filter.countyName)

        return filter
    }

    function refresh() {     
            $("#grid").data("kendoGrid").dataSource.read();
            $("#grid").data("kendoGrid").dataSource.page(1);
        
    }
    function error_handler(e) {    
        if (e.errors) {
            e.preventDefault();
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });        
            alert(message);
        }
    } 

</script>

<br />

<div class="row" col-6>

    @(Html.Kendo().Grid<iWasHere.Domain.DTOs.CityDTO>()
        .Name("grid")
            .Columns(columns =>
            {
                columns.Bound(c => c.cityId).Title("CityId").Visible(false);
                columns.Bound(c => c.countyId).Title("CountyId").Visible(false);
                columns.Bound(c => c.cityName).Title("Nume Oras");
                columns.Bound(c => c.county).Title("Nume Judet");
                columns.Template("<a href='" + @Url.Action("CreateOrEdit", "City") + "?id=#=cityId#' onclick='setEdit()' class='btn btn-success'> <i class='fas fa-edit'></i>&nbsp; Modifica</a> ");
                columns.Command(command =>
           {
                  command.Destroy().Text("<i class='fas fa-trash-alt'></i> &nbsp; Delete");
           });
            })
            .HtmlAttributes(new { style = "height: 550px;" })
            .Scrollable()
            .Groupable()
            .Sortable()
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .Filterable()
            .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("Read", "City").Data("myFilter"))
                .Events(events => events.Error("error_handler"))
                .Model(model => model.Id(p => p.countyId))
                .Destroy(update => update.Action("Delete", "City"))
                .PageSize(10)
                )
    )
    <br/>
    <div class="col-6" align="left">
        <a href="@Url.Action("CreateOrEdit", "City", 0)" onclick="setCreate()" class="btn btn-info"><i class="fas fa-plus"></i>&nbsp; New Product Type</a>
    </div>


</div>



