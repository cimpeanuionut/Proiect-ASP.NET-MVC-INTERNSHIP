
@{
    ViewData["Title"] = "Index";
}

<style>
    .customer-photo {
        display: inline-block;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background-size: 32px 35px;
        background-position: center center;
        vertical-align: middle;
        line-height: 32px;
        box-shadow: inset 0 0 1px #999, inset 0 0 10px rgba(0,0,0,.2);
        margin-left: 5px;
    }

    .customer-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
</style>

<script type="text/javascript">
    getRequestedAttractionCategory = function (e) {
        var input = {};
        input["attractionCategory"] = $("#attractionCategory").val();

        return input;
    }

    function refresh() {
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }

    function setEdit() {
        localStorage.setItem("storageName", "edit");
    }

     function setAdd() {
        localStorage.setItem("storageName", "add");
    }

</script>

<h1>Categorii de atractii</h1><br />
<h4>Filtreaza dupa: </h4>

<form>
    <label>Tip atractie: </label>
    <input id="attractionCategory" type="text" name="attractionCategory" value="" />
    <button onclick="refresh()" type="button" class="btn btn-primary" asp-area="" asp-controller="DictionaryAttractionCategory" asp-action="GetFilteredAttraction">Filtreaza</button>
</form>


@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryAttractionCategoryModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.AttractionCategoryId).Visible(false);
            columns.Bound(c => c.AttractionCategoryName);
            columns.Template("<a onclick='setEdit()' class = 'btn btn-success' href='" + @Url.Action("AddAttractionCategory", "DictionaryAttractionCategory") + "?id=#=AttractionCategoryId#'>Modifica</a>");
            columns.Command(command => { command.Destroy(); }).Width(200);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Groupable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(2)
            .Read(read => read.Action("GetAttractionCategory", "DictionaryAttractionCategory").Data("getRequestedAttractionCategory"))   
            .Model(model => model.Id(t => t.AttractionCategoryId))
            .Destroy(delete =>delete.Action("DeleteAttractionCategory", "DictionaryAttractionCategory"))
     )
)

<a onclick="setAdd()" href=@Url.Action("AddAttractionCategory", "DictionaryAttractionCategory", 0) type="button" class="btn btn-primary">Adauga</a>
