

@{
    ViewData["Title"] = "Index";
}

<style type="text/css">
    @@import url('https://fonts.googleapis.com/css?family=Open+Sans+Condensed:300&display=swap');   
    .myHeader {
        color: black;
        padding: 45px;
        text-align: center;
        font-family: 'Open Sans Condensed', sans-serif;
        font-size: 320%;
    }

    .filter {
        border-style: ridge;
        border-radius: 3px;
        padding: 25px;
    }

    input {
        width: 60%;
    }
</style>

<h1 class="myHeader"> Dictionar categorii de actractii</h1>


<script type="text/javascript">
    getRequestedAttractionCategory = function (e) {
        var input = {};
        input["attractionCategory"] = $("#attractionCategory").val();



        return input;
    }



    function refresh() {
        $("#grid").data("kendoGrid").dataSource.read();
        $("#grid").data("kendoGrid").dataSource.page(1);
    }

    function deleteFiltersAndRefresh() {
        $('#attractionCategory').val("");
        refresh();
    }

    function setEdit() {
        localStorage.setItem("storageName", "edit");
    }

    function setAdd() {
        localStorage.setItem("storageName", "add");
    }

    function info(e) {
        alert("Categoria de atractie nu poate fi steara");
    }

</script>

<h5>Filtreaza dupa: </h5>

<form class="filter">
    <label>Tip atractie: </label>
    <input id="attractionCategory" type="text" name="attractionCategory" value="" />
    <button onclick="refresh()" type="button" class="btn btn-primary" asp-area="" asp-controller="DictionaryAttractionCategory" asp-action="GetFilteredAttraction">Filtreaza</button>
    <button onclick="deleteFiltersAndRefresh()" type="button" class="btn btn-danger" asp-area="" asp-controller="DictionaryAttractionCategory" asp-action="GetFilteredAttraction">Sterge Filtru</button>
</form>
<br />

@(Html.Kendo().Grid<iWasHere.Domain.DTOs.DictionaryAttractionCategoryModel>()
        .Name("grid")
        .Columns(columns =>
        {
            columns.Bound(c => c.AttractionCategoryId).Visible(false);
            columns.Bound(c => c.AttractionCategoryName);
            columns.Template("<a onclick='setEdit()' class = 'btn btn-success' href='" + @Url.Action("AddAttractionCategory", "DictionaryAttractionCategory") + "?id=#=AttractionCategoryId#'>Modifica</a>").Width(170);
            columns.Command(command => { command.Destroy(); }).Width(200);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Read(read => read.Action("GetAttractionCategory", "DictionaryAttractionCategory").Data("getRequestedAttractionCategory"))
            .Events(events => events.Error("info"))
            .Model(model => model.Id(t => t.AttractionCategoryId))
            .Destroy(delete => delete.Action("DeleteAttractionCategory", "DictionaryAttractionCategory"))
     )
)

<br />
<div align="center">
    <a onclick="setAdd()" href=@Url.Action("AddAttractionCategory", "DictionaryAttractionCategory", 0) type="button" class="btn btn-primary">Adauga</a>
</div>