@model iWasHere.Domain.DTOs.TouristicObjectiveDTO

@{
    ViewData["Title"] = "TouristicObjectiveDetail";
}
<style>

.myHeader {
        background-color: lightblue;
        color: black;
        padding: 40px;
        text-align: center;
        font-family: Georgia;
        color: white;
    }
    </style>
<h1 class="myHeader"> Detalii Obiectiv Turistic</h1>
<br/>
@using (Html.BeginForm("TouristicObjectiveDetail", "TouristicObjective", FormMethod.Post, new { id = "form" }))
{
    <div id="div1">
    <input type="text" asp-for="TouristicObjectiveName" id="txtObjectiveName" readonly />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <input type="text" asp-for="countryName" id="txtObjectiveCountry" />

    <label>         ,      </label>
    <input type="text" asp-for="cityName" id="txtObjectiveCity" />

    <br />
    <br />
    <label>Cod: </label>
    <input type="text" asp-for="TouristicObjectiveCode" id="txtObjectiveCode" readonly />

    <label>,</label>
    <input type="text" asp-for="AttractionCategoryName" id="txtObjectiveCategory" readonly />
    <br />
    <br />
    <label> Descriere: </label>
    <textarea type="text" asp-for="TouristicObjectiveDescription" id="txtObjectiveDescription" readonly> </textarea>
    <br />
    <br />
    <label> Pret:</label>
    <input type="text" asp-for="Price" id="txtObjectivePrice" readonly />

    <br />
    <br />
    <label>
        Sezon:
    </label>
    <input type="text" asp-for="Type" id="txtObjectiveOpenSeason" readonly />

    <input type="text" asp-for="Latitude" hidden id="Latitude" />
    <input type="text" asp-for="Longitude" hidden id="Longitude" />
    </div>
    <div id="map"></div>

}

<style>
    #div1{
    float:left;
    }
    #map {
        top: 180px;
        height: 250px;
        width: 400px;
        display: flex;
        left: 300px;
    }

    #txtObjectiveName {
        font-style: oblique;
        font-size: xx-large;
        font-weight: bold;
        border: transparent;
        text-align: right;
    }

    #txtObjectiveCountry {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectiveCity {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectiveCategory {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectiveCode {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectiveDescription {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectiveOpenSeason {
        border: transparent;
        font-size: medium;
        text-align: left;
    }

    #txtObjectivePrice {
        border: transparent;
        font-size: medium;
        text-align: left;
    }
</style>

<script>
    var map;
    function initMap() {
        debugger;
        var Latitude = parseFloat($("#Latitude").val());
        var Longitude = parseFloat($("#Longitude").val());
        // The location of Uluru
        var uluru = { lat: Latitude, lng: Longitude };
        // The map, centered at Uluru
        var map = new google.maps.Map(
            document.getElementById('map'), { zoom: 15, center: uluru });
        // The marker, positioned at Uluru
        var marker = new google.maps.Marker({ position: uluru, map: map });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDbRIxmMBjKw5IovRx6CF03hU8SDpqxtos&callback=initMap"
        async defer></script>